// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.polypharm.gescom.service;

import com.polypharm.gescom.domain.FormationUtilisateur;
import com.polypharm.gescom.repository.FormationUtilisateurRepository;
import com.polypharm.gescom.service.FormationUtilisateurServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect FormationUtilisateurServiceImpl_Roo_Service {
    
    declare @type: FormationUtilisateurServiceImpl: @Service;
    
    declare @type: FormationUtilisateurServiceImpl: @Transactional;
    
    @Autowired
    FormationUtilisateurRepository FormationUtilisateurServiceImpl.formationUtilisateurRepository;
    
    public long FormationUtilisateurServiceImpl.countAllFormationUtilisateurs() {
        return formationUtilisateurRepository.count();
    }
    
    public void FormationUtilisateurServiceImpl.deleteFormationUtilisateur(FormationUtilisateur formationUtilisateur) {
        formationUtilisateurRepository.delete(formationUtilisateur);
    }
    
    public FormationUtilisateur FormationUtilisateurServiceImpl.findFormationUtilisateur(Long id) {
        return formationUtilisateurRepository.findOne(id);
    }
    
    public List<FormationUtilisateur> FormationUtilisateurServiceImpl.findAllFormationUtilisateurs() {
        return formationUtilisateurRepository.findAll();
    }
    
    public List<FormationUtilisateur> FormationUtilisateurServiceImpl.findFormationUtilisateurEntries(int firstResult, int maxResults) {
        return formationUtilisateurRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void FormationUtilisateurServiceImpl.saveFormationUtilisateur(FormationUtilisateur formationUtilisateur) {
        formationUtilisateurRepository.save(formationUtilisateur);
    }
    
    public FormationUtilisateur FormationUtilisateurServiceImpl.updateFormationUtilisateur(FormationUtilisateur formationUtilisateur) {
        return formationUtilisateurRepository.save(formationUtilisateur);
    }
    
}
