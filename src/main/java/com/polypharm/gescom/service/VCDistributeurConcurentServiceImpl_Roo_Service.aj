// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.polypharm.gescom.service;

import com.polypharm.gescom.domain.VCDistributeurConcurent;
import com.polypharm.gescom.repository.VCDistributeurRepository;
import com.polypharm.gescom.service.VCDistributeurConcurentServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect VCDistributeurConcurentServiceImpl_Roo_Service {
    
    declare @type: VCDistributeurConcurentServiceImpl: @Service;
    
    declare @type: VCDistributeurConcurentServiceImpl: @Transactional;
    
    @Autowired
    VCDistributeurRepository VCDistributeurConcurentServiceImpl.vCDistributeurRepository;
    
    public long VCDistributeurConcurentServiceImpl.countAllVCDistributeurConcurents() {
        return vCDistributeurRepository.count();
    }
    
    public void VCDistributeurConcurentServiceImpl.deleteVCDistributeurConcurent(VCDistributeurConcurent VCDistributeurConcurent_) {
        vCDistributeurRepository.delete(VCDistributeurConcurent_);
    }
    
    public VCDistributeurConcurent VCDistributeurConcurentServiceImpl.findVCDistributeurConcurent(Long id) {
        return vCDistributeurRepository.findOne(id);
    }
    
    public List<VCDistributeurConcurent> VCDistributeurConcurentServiceImpl.findAllVCDistributeurConcurents() {
        return vCDistributeurRepository.findAll();
    }
    
    public List<VCDistributeurConcurent> VCDistributeurConcurentServiceImpl.findVCDistributeurConcurentEntries(int firstResult, int maxResults) {
        return vCDistributeurRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void VCDistributeurConcurentServiceImpl.saveVCDistributeurConcurent(VCDistributeurConcurent VCDistributeurConcurent_) {
        vCDistributeurRepository.save(VCDistributeurConcurent_);
    }
    
    public VCDistributeurConcurent VCDistributeurConcurentServiceImpl.updateVCDistributeurConcurent(VCDistributeurConcurent VCDistributeurConcurent_) {
        return vCDistributeurRepository.save(VCDistributeurConcurent_);
    }
    
}
